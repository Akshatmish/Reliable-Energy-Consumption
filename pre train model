import pandas as pd
import pickle
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression, Ridge
from xgboost import XGBRegressor

def load_data():
    try:
        data = pd.read_csv('household_power_consumption.txt', sep=';',
                         parse_dates={'datetime': ['Date', 'Time']},
                         infer_datetime_format=True,
                         low_memory=False)
        data = data.apply(pd.to_numeric, errors='coerce')
        data['datetime'] = data['datetime'].astype('int64') // 10**9
        return data.dropna()
    except Exception as e:
        print(f"Error loading data: {e}")
        return None

models = {
    'Global_active_power': {'lin': None, 'ridge': None, 'xgb': None},
    'Sub_metering_1': {'lin': None, 'ridge': None, 'xgb': None},
    'Sub_metering_2': {'lin': None, 'ridge': None, 'xgb': None},
    'Sub_metering_3': {'lin': None, 'ridge': None, 'xgb': None}
}

data = load_data()
if data is not None:
    features = ['datetime', 'Global_reactive_power', 'Voltage', 'Global_intensity']
    targets = ['Global_active_power', 'Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3']
    
    X = data[features]
    for target in targets:
        y = data[target]
        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)
        
        models[target]['lin'] = LinearRegression().fit(X_train, y_train)
        models[target]['ridge'] = Ridge().fit(X_train, y_train)
        models[target]['xgb'] = XGBRegressor().fit(X_train, y_train)

    for target in models.keys():
        for model_type in ['lin', 'ridge', 'xgb']:
            with open(f'{target}_{model_type}.pkl', 'wb') as f:
                pickle.dump(models[target][model_type], f)
    print("Models saved successfully.")
